# Патерн Command
class Command:
    def execute(self):
        pass


class Light:
    def turn_on(self):
        print("Light is turned on.")

    def turn_off(self):
        print("Light is turned off.")


class LightOnCommand(Command):
    def __init__(self, light):
        self.light = light

    def execute(self):
        self.light.turn_on()


class LightOffCommand(Command):
    def __init__(self, light):
        self.light = light

    def execute(self):
        self.light.turn_off()


# Патерн Memento
class EditorMemento:
    def __init__(self, content):
        self.content = content


class Editor:
    def __init__(self):
        self.content = ""

    def type(self, text):
        self.content += text

    def get_content(self):
        return self.content

    def create_memento(self):
        return EditorMemento(self.content)

    def restore_from_memento(self, memento):
        self.content = memento.content


# Патерн Composite
class FileSystemComponent:
    def __init__(self, name):
        self.name = name

    def display(self, indent=""):
        pass


class File(FileSystemComponent):
    def display(self, indent=""):
        print(indent + self.name)


class Directory(FileSystemComponent):
    def __init__(self, name):
        super().__init__(name)
        self.children = []

    def add(self, component):
        self.children.append(component)

    def remove(self, component):
        self.children.remove(component)

    def display(self, indent=""):
        print(indent + self.name)
        for child in self.children:
            child.display(indent + "  ")


# Використання патернів
def main():
    # Використання патерну Command
    light = Light()
    light_on_command = LightOnCommand(light)
    light_off_command = LightOffCommand(light)

    light_on_command.execute()  # Включення світла
    light_off_command.execute()  # Виключення світла

    # Використання патерну Memento
    editor = Editor()
    editor.type("Hello")  # Введення тексту
    memento = editor.create_memento()  # Збереження стану

    editor.type(" World")  # Продовження введення тексту
    print(editor.get_content())  # Виведення вмісту: Hello World

    editor.restore_from_memento(memento)  # Відновлення попереднього стану
    print(editor.get_content())  # Виведення вмісту: Hello

    # Використання патерну Composite
    root = Directory("Root")
    file1 = File("File1.txt")
    file2 = File("File2.txt")
    sub_dir = Directory("Subdirectory")
    file3 = File("File3.txt")

    root.add(file1)
    root.add(file2)
    root.add(sub_dir)
    sub_dir.add(file3)

    root.display()
    # Виведення структури:
    # Root
    #   File1.txt
    #   File2.txt
    #   Subdirectory
    #     File3.txt


if __name__ == "__main__":
    main()
